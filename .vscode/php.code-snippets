{
  "WordPress plugin class": {
    "scope": "php",
    "prefix": "php:class",
    "body": [
      "declare( strict_types=1 );",
      "/**",
      " * Include Fussball.de Widgets",
      " *",
      " * @package   ITSB\\IncludeFussballDeWidgets",
      " * @author    Alexander Böhm <ab@its-boehm.de>",
      " * @license   GPL2",
      " * @link      https://wordpress.org/plugins/include-fussball-de-widgets/",
      " * @copyright $CURRENT_YEAR Alexander Böhm",
      " */",
      "",
      "namespace ITSB\\IFDW\\\\${TM_DIRECTORY/^.+\\/(.*)$/$1/};",
      "",
      "/**",
      " * The `$TM_FILENAME_BASE` class ${2:comment}",
      " *",
      " * @since ${3:3.1}",
      " */",
      "final class $TM_FILENAME_BASE {",
      "\t${0}",
      "}",
      ""
    ],
    "description": "WordPress plugin class"
  },
  "PHPUnit testcase class": {
    "prefix": "phpunit:class",
    "body": [
      "declare( strict_types=1 );",
      "/**",
      " * Include Fussball.de Widgets",
      " *",
      " * @package   ITSB\\IncludeFussballDeWidgets",
      " * @author    Alexander Böhm <ab@its-boehm.de>",
      " * @license   GPL2",
      " * @link      https://wordpress.org/plugins/include-fussball-de-widgets/",
      " * @copyright $CURRENT_YEAR Alexander Böhm",
      " */",
      "",
      "namespace ITSB\\IFDW\\PhpUnit\\Tests\\\\${TM_DIRECTORY/^.+\\/(.*)$/$1/};",
      "",
      "require_once __DIR__ . '../../../Utils/WP_Hooks.php';",
      "",
      "use IFDW\\\\${TM_DIRECTORY/^.+\\/(.*)$/$1/}\\\\${2:classToTest};",
      "use IFDW\\PhpUnit\\Utils\\WP_Hooks;",
      "",
      "/**",
      " * Class $TM_FILENAME_BASE",
      " *",
      " * @since ${3:version}",
      " */",
      "final class $TM_FILENAME_BASE extends \\WP_UnitTestCase {",
      "\t/**",
      "\t * The instance.",
      "\t *",
      "\t * @since ${3:version}",
      "\t * @var ${2:classToTest}",
      "\t */",
      "\tprivate static \\$instance;",
      "",
      "\t/**",
      "\t * Set up the configuration",
      "\t *",
      "\t * @since ${3:version}",
      "\t * @return void",
      "\t */",
      "\tpublic function setUp() {",
      "\t  // Get the instance.",
      "\t  self::\\$instance = ${2:classToTest}::getInstance();",
      "\t}",
      "",
      "\t/**",
      "\t * Tests adding the `${4:hook}` is set.",
      "\t *",
      "\t * @since ${3:version}",
      "\t *",
      "\t * @see ${2:classToTest}::${5:functionHookCall}();",
      "\t * @test",
      "\t *",
      "\t * @return void",
      "\t */",
      "\tpublic function test${7:Hook}${8|Action,Filter|}IsSet(): void {",
      "\t\t\\$this->assertFalse( WP_Hooks::hasAction( '${4:hook}', self::\\$instance, '${6:functionCall}' ) );",
      "\t\tself::\\$instance->${5:functionHookCall}();",
      "\t\t\\$this->assertTrue( WP_Hooks::hasAction( '${4:hook}', self::\\$instance, '${6:functionCall}' ) );",
      "\t}",
      "",
      "\t${0}",
      "}",
      ""
    ],
    "description": "A random PHPUnit testcase class for singletons."
  }
}
